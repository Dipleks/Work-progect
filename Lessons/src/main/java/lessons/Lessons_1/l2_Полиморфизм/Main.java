package lessons.Lessons_1.l2_Полиморфизм;
/*
* Преимущества полиморфизма:
    1) Создание повторно используемого кода. То есть, как только класс создан,
 реализован и протестирован, он может свободно использоваться без заботы о том,
 что конкретно в нем написано.
    2) Это обеспечивает более универсальный и слабосвязанный код.
    3) Понижается время компиляции, что ускоряет разработку.
    4) Динамическое связывание.
    5) Один и тот же интерфейс может быть использован для создания методов
 с разными реализациями.
    6) Вся реализация может быть заменена с помощью использования одинаковых
 сигнатур метода.
* */
public class Main {
    //реализуем наш класс Car:
    void useCar (Car car){
        car.driving();
        System.out.println(car.getNumOfSeets());
    }
    public static void main(String[] args) {
        //Выведем результат на консоль:
        Main main = new Main();
        main.useCar(new Car());
        /*Получим ответ:
        *       driving
        *       4
        * */

   /*Теперь мы хотим переопределить наш метод, например сделаем машину с 2я
   * сиденьями, для этого создаем класс Toyta и переопределяем в нем метод класса Car.
   * После переопределения метода, мы можем вызвать нашу машину, но уже с 2я сидениями:*/

        main.useCar(new Toyta());
        /*Получим ответ:
         *       driving
         *       2
         * */
    }
}
